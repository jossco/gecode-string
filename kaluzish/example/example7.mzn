%% Minizinc model for example7.txt
%% Automatically generated by kaluzish
%% Requires MiniZinc version >= 1.6
include "gecode-string-pad.mzn";
include "gecode-string-ascii.mzn";
        
int: wordlen;
set of int: widx = 1..wordlen;

var int: I1_5;
var bool: T_3;
var bool: T_7;
var 0..wordlen: len_MZN_GEN_10; array[widx] of var symbols: MZN_GEN_10;
constraint str_pad(MZN_GEN_10, len_MZN_GEN_10);
var int: PCTEMP_LHS_2;
var int: I2_5;
var int: T_4;
var int: PCTEMP_LHS_1;
var 0..wordlen: len_MZN_GEN_2; array[widx] of var symbols: MZN_GEN_2;
constraint str_pad(MZN_GEN_2, len_MZN_GEN_2);
var 0..wordlen: len_MZN_GEN_3; array[widx] of var symbols: MZN_GEN_3;
constraint str_pad(MZN_GEN_3, len_MZN_GEN_3);
var 0..wordlen: len_MZN_GEN_1; array[widx] of var symbols: MZN_GEN_1;
constraint str_pad(MZN_GEN_1, len_MZN_GEN_1);
var 0..wordlen: len_MZN_GEN_6; array[widx] of var symbols: MZN_GEN_6;
constraint str_pad(MZN_GEN_6, len_MZN_GEN_6);
var 0..wordlen: len_MZN_GEN_7; array[widx] of var symbols: MZN_GEN_7;
constraint str_pad(MZN_GEN_7, len_MZN_GEN_7);
var 0..wordlen: len_MZN_GEN_4; array[widx] of var symbols: MZN_GEN_4;
constraint str_pad(MZN_GEN_4, len_MZN_GEN_4);
var 0..wordlen: len_MZN_GEN_5; array[widx] of var symbols: MZN_GEN_5;
constraint str_pad(MZN_GEN_5, len_MZN_GEN_5);
var bool: T_6;
var 0..wordlen: len_MZN_GEN_8; array[widx] of var symbols: MZN_GEN_8;
constraint str_pad(MZN_GEN_8, len_MZN_GEN_8);
var 0..wordlen: len_MZN_GEN_9; array[widx] of var symbols: MZN_GEN_9;
constraint str_pad(MZN_GEN_9, len_MZN_GEN_9);
var 0..wordlen: len_PCTEMP_LHS_3; array[widx] of var symbols: PCTEMP_LHS_3;
constraint str_pad(PCTEMP_LHS_3, len_PCTEMP_LHS_3);
var 0..wordlen: len_var_0xINPUT_122; array[widx] of var symbols: var_0xINPUT_122;
constraint str_pad(var_0xINPUT_122, len_var_0xINPUT_122);
var 0..wordlen: len_T3_2; array[widx] of var symbols: T3_2;
constraint str_pad(T3_2, len_T3_2);
var 0..wordlen: len_T0_1; array[widx] of var symbols: T0_1;
constraint str_pad(T0_1, len_T0_1);
var 0..wordlen: len_MZN_GEN_11; array[widx] of var symbols: MZN_GEN_11;
constraint str_pad(MZN_GEN_11, len_MZN_GEN_11);
var 0..wordlen: len_MZN_GEN_12; array[widx] of var symbols: MZN_GEN_12;
constraint str_pad(MZN_GEN_12, len_MZN_GEN_12);
var 0..wordlen: len_T0_2; array[widx] of var symbols: T0_2;
constraint str_pad(T0_2, len_T0_2);
var 0..wordlen: len_T4_2; array[widx] of var symbols: T4_2;
constraint str_pad(T4_2, len_T4_2);
var 0..wordlen: len_T1_5; array[widx] of var symbols: T1_5;
constraint str_pad(T1_5, len_T1_5);
var 0..wordlen: len_T1_1; array[widx] of var symbols: T1_1;
constraint str_pad(T1_1, len_T1_1);
var 0..wordlen: len_T1_2; array[widx] of var symbols: T1_2;
constraint str_pad(T1_2, len_T1_2);
var 0..wordlen: len_T4_1; array[widx] of var symbols: T4_1;
constraint str_pad(T4_1, len_T4_1);
var 0..wordlen: len_T3_1; array[widx] of var symbols: T3_1;
constraint str_pad(T3_1, len_T3_1);
var 0..wordlen: len_T3_5; array[widx] of var symbols: T3_5;
constraint str_pad(T3_5, len_T3_5);
var 0..wordlen: len_T2_2; array[widx] of var symbols: T2_2;
constraint str_pad(T2_2, len_T2_2);
var 0..wordlen: len_T2_1; array[widx] of var symbols: T2_1;
constraint str_pad(T2_1, len_T2_1);
var int: I0_5;
var int: I0_2;
var 0..wordlen: len_T2_5; array[widx] of var symbols: T2_5;
constraint str_pad(T2_5, len_T2_5);
var int: I0_1;
var bool: T_SELECT_1;
var bool: T_SELECT_2;
var 0..wordlen: len_T5_1; array[widx] of var symbols: T5_1;
constraint str_pad(T5_1, len_T5_1);
var 0..wordlen: len_T5_2; array[widx] of var symbols: T5_2;
constraint str_pad(T5_2, len_T5_2);

%% DFAs
% \notin /#/
int: MZN_DFA_2_Q = 2;
int: MZN_DFA_2_q0 = 1; set of int: MZN_DFA_2_F = { 1 };
array[1..MZN_DFA_2_Q,1..max_symbol] of int: MZN_DFA_2_d = [|
  % State 1
    1, 1, 1, 2, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1|
  % State 2
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
    2, 2, 2, 2, 2, 2|];

% \notin /\?/
int: MZN_DFA_1_Q = 2;
int: MZN_DFA_1_q0 = 1; set of int: MZN_DFA_1_F = { 1 };
array[1..MZN_DFA_1_Q,1..max_symbol] of int: MZN_DFA_1_d = [|
  % State 1
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1|
  % State 2
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
    2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
    2, 2, 2, 2, 2, 2|];
%%% constant strings
% MZN_CONST_STR_3 = 'xyz=99999&abc=qwerty'
array[1..21] of symbols: MZN_CONST_STR_3 = [89, 90, 91, 30, 26, 26, 26, 26, 26, 7, 66, 67, 68, 30, 82, 88, 70, 83, 85, 90, 96];
int: len_MZN_CONST_STR_3 = 20;
% MZN_CONST_STR_2 = '#'
array[1..2] of symbols: MZN_CONST_STR_2 = [4, 96];
int: len_MZN_CONST_STR_2 = 1;
% MZN_CONST_STR_1 = '?'
array[1..2] of symbols: MZN_CONST_STR_1 = [32, 96];
int: len_MZN_CONST_STR_1 = 1;

constraint T_SELECT_1 <-> PCTEMP_LHS_1 != -1;
constraint str_concat(T0_1, len_T0_1, T1_1,  len_T1_1, var_0xINPUT_122, len_var_0xINPUT_122 );
constraint 0 == len_T0_1;
constraint str_regular(MZN_GEN_1, len_MZN_GEN_1, MZN_DFA_1_Q, max_symbol, MZN_DFA_1_d, MZN_DFA_1_q0, MZN_DFA_1_F);
constraint str_concat(MZN_GEN_3, len_MZN_GEN_3, MZN_GEN_4,  len_MZN_GEN_4, MZN_GEN_2, len_MZN_GEN_2 );
constraint str_concat(MZN_GEN_5, len_MZN_GEN_5, MZN_GEN_6,  len_MZN_GEN_6, MZN_GEN_3, len_MZN_GEN_3 );
constraint str_regular(MZN_GEN_5, len_MZN_GEN_5, MZN_DFA_1_Q, max_symbol, MZN_DFA_1_d, MZN_DFA_1_q0, MZN_DFA_1_F);
constraint T_SELECT_1 <-> (
  PCTEMP_LHS_1 = (I0_1 + 0)
  /\ I0_1 == len_T4_1
  /\ str_equal(MZN_GEN_2, len_MZN_GEN_2, T1_1, len_T1_1)
  /\ str_equal(MZN_GEN_3, len_MZN_GEN_3, T2_1, len_T2_1)
  /\ str_equal(MZN_GEN_4, len_MZN_GEN_4, T3_1, len_T3_1)
  /\ str_equal(MZN_GEN_5, len_MZN_GEN_5, T4_1, len_T4_1)
  /\ str_equal(MZN_GEN_6, len_MZN_GEN_6, T5_1, len_T5_1)
  /\ str_equal(T5_1, len_T5_1, MZN_CONST_STR_1, len_MZN_CONST_STR_1)
);
  constraint not T_SELECT_1 <-> (
  PCTEMP_LHS_1 == -1
  /\ str_equal(MZN_GEN_1, len_MZN_GEN_1, T1_1, len_T1_1)
);
constraint T_SELECT_2 <-> PCTEMP_LHS_2 != -1;
constraint str_concat(T0_2, len_T0_2, T1_2,  len_T1_2, var_0xINPUT_122, len_var_0xINPUT_122 );
constraint 0 == len_T0_2;
constraint str_regular(MZN_GEN_7, len_MZN_GEN_7, MZN_DFA_2_Q, max_symbol, MZN_DFA_2_d, MZN_DFA_2_q0, MZN_DFA_2_F);
constraint str_concat(MZN_GEN_9, len_MZN_GEN_9, MZN_GEN_10,  len_MZN_GEN_10, MZN_GEN_8, len_MZN_GEN_8 );
constraint str_concat(MZN_GEN_11, len_MZN_GEN_11, MZN_GEN_12,  len_MZN_GEN_12, MZN_GEN_9, len_MZN_GEN_9 );
constraint str_regular(MZN_GEN_11, len_MZN_GEN_11, MZN_DFA_2_Q, max_symbol, MZN_DFA_2_d, MZN_DFA_2_q0, MZN_DFA_2_F);
constraint T_SELECT_2 <-> (
  PCTEMP_LHS_2 = (I0_2 + 0)
  /\ I0_2 == len_T4_2
  /\ str_equal(MZN_GEN_8, len_MZN_GEN_8, T1_2, len_T1_2)
  /\ str_equal(MZN_GEN_9, len_MZN_GEN_9, T2_2, len_T2_2)
  /\ str_equal(MZN_GEN_10, len_MZN_GEN_10, T3_2, len_T3_2)
  /\ str_equal(MZN_GEN_11, len_MZN_GEN_11, T4_2, len_T4_2)
  /\ str_equal(MZN_GEN_12, len_MZN_GEN_12, T5_2, len_T5_2)
  /\ str_equal(T5_2, len_T5_2, MZN_CONST_STR_2, len_MZN_CONST_STR_2)
);
  constraint not T_SELECT_2 <-> (
  PCTEMP_LHS_2 == -1
  /\ str_equal(MZN_GEN_7, len_MZN_GEN_7, T1_2, len_T1_2)
);
constraint T_3 <-> PCTEMP_LHS_2 == -1;
constraint T_3 == true;
constraint T_4 = (PCTEMP_LHS_1 + 1);
constraint I0_5 = (I2_5 - T_4);
constraint T_4 >= 0;
constraint I2_5 >= T_4;
constraint I2_5 <= I1_5;
constraint I2_5 == I1_5;
constraint I0_5 == len_PCTEMP_LHS_3;
constraint str_concat(T1_5, len_T1_5, T2_5,  len_T2_5, var_0xINPUT_122, len_var_0xINPUT_122 );
constraint str_concat(PCTEMP_LHS_3, len_PCTEMP_LHS_3, T3_5,  len_T3_5, T2_5, len_T2_5 );
constraint T_4 == len_T1_5;
constraint I1_5 == len_var_0xINPUT_122;
constraint T_6 <-> str_nequal(PCTEMP_LHS_3, len_PCTEMP_LHS_3, MZN_CONST_STR_3, len_MZN_CONST_STR_3);
constraint T_7 == not T_6;
constraint T_7 == true;

solve satisfy;

output ["var_0xINPUT_122=\""] ++ [ascii[fix(var_0xINPUT_122[i])] | i in 1..fix(len_var_0xINPUT_122)] ++ ["\"\n"];
        
